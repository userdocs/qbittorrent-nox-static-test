name: ci - debian build

on:
  workflow_call:
    inputs:
      distinct_id:
        description: "Distinct id"
        required: false
        type: string
      workflow-files:
        description: "Alpine: workflow-files files"
        required: true
        type: string
      icu:
        description: "enable icu"
        required: true
        type: string
      debug:
        description: "debug builds"
        required: true
        type: string
      script_name:
        description: "script name"
        required: true
        type: string

jobs:
  build:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        container_id: [debian, ubuntu]
        container_codename: [bookworm, noble]
        qbt_build_tool: ["cmake", "qmake"]
        qbt_libtorrent_version: ["1.2", "2.0"]
        exclude:
          - container_id: debian
            container_codename: noble
          - container_id: ubuntu
            container_codename: bookworm
        include:
          - qbt_build_tool: "qmake"
            qbt_qt_version: "5"
          - qbt_build_tool: "cmake"
            qbt_qt_version: "6"

    name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.qbt_libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.qbt_build_tool }}"

    env: # host
      qbt_build_dir: "qbt-build"
      disable_qt5: ""
      artifact_name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.qbt_libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.qbt_build_tool }}-nox"
      script_name: ${{ inputs.script_name }}

    container:
      image: arm64v8/${{ matrix.container_id }}:${{ matrix.container_codename }}
      env: # container
        LANG: C.UTF-8
        LC_ALL: C.UTF-8
        DEBIAN_FRONTEND: noninteractive
        disable_qt5: ${{ env.disable_qt5 }}
        qbt_build_dir: ${{ env.qbt_build_dir }}
        qbt_libtorrent_version: ${{ matrix.qbt_libtorrent_version }}
        qbt_qt_version: ${{ matrix.qbt_qt_version }}
        qbt_build_tool: ${{ matrix.qbt_build_tool }}
        qbt_cross_name: ${{ matrix.qbt_cross_name }}
        qbt_patches_url: ${{ github.repository }}
        qbt_skip_icu: ${{ inputs.icu }}
        qbt_boost_tag: ${{ matrix.qbt_boost_tag }}
        qbt_libtorrent_tag: ${{ matrix.qbt_libtorrent_tag }}
        qbt_qt_tag: ${{ matrix.qbt_qt_tag }}
        qbt_qbittorrent_tag: ${{ matrix.qbt_qbittorrent_tag }}
        qbt_libtorrent_master_jamfile: ""
        qbt_workflow_files: ${{ inputs.workflow-files }}
        qbt_workflow_artifacts: ""
        qbt_cache_dir: ""
        qbt_optimise_strip: ""
        qbt_build_debug: ${{ inputs.debug }}
        qbt_revision_url: ${{ github.repository }}
        qbt_standard: ""
        qbt_static_ish: ""
    steps:
      - name: Checkout ${{ inputs.distinct_id }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Bootstrap test tools ${{ inputs.distinct_id }}
        run: bash ${script_name} update install_test

      - name: qBittorrent v5 transition ${{ inputs.distinct_id }}
        run: |
          if [[ -f "${qbt_build_dir}/release_info/disable-qt5" || -f "disable-qt5" ]]; then
              printf '%s\n' "disable_qt5=yes" >> $GITHUB_ENV
              printf '%s\n' "Found file: \`disable-qt5\` -> setting env: \`disable_qt5=yes\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Bootstrap core deps ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} install_core

      - name: Bootstrap build ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} -bs-a

      - name: glibc ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} glibc

      - name: zlib ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} zlib

      - name: iconv ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} iconv

      - name: icu ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} icu

      - name: openssl ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} openssl

      - name: boost ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} boost

      - name: libtorrent ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} libtorrent

      - name: double conversion ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes' && matrix.qbt_build_tool == 'cmake'
        run: bash ${script_name} double_conversion

      - name: qtbase ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} qtbase

      - name: qttools ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} qttools

      - name: qbittorrent ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        run: bash ${script_name} qbittorrent

      - name: Upload ${{ env.artifact_name }} artifacts ${{ inputs.distinct_id }}
        if: env.disable_qt5 != 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ${{ env.qbt_build_dir }}/completed/qbittorrent-nox

      - name: Host - Upload logs on error
        if: failure() && env.disable_qt5 != 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.artifact_name }}-logs"
          path: "${{ env.qbt_build_dir }}"
