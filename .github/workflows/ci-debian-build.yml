name: ci - debian build

on:
  workflow_call:
    inputs:
      distinct_id:
        description: "Distinct id"
        required: false
        type: string
      workflow-files:
        description: "Alpine: workflow-files files"
        required: true
        type: boolean
      workflow-files-as-artifacts:
        description: "Alpine: workflows artifacts"
        required: true
        type: boolean
      icu:
        description: "enable icu"
        required: true
        type: boolean
      debug:
        description: "debug builds"
        required: true
        type: boolean
      upx:
        description: "upx compress builds"
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container_id: [debian, ubuntu]
        container_codename: [bookworm, jammy, noble]
        qbt_build_tool: ["", "qmake"]
        qbt_libtorrent_version: ["1.2", "2.0"]
        exclude:
          - container_id: debian
            container_codename: focal
          - container_id: debian
            container_codename: jammy
          - container_id: debian
            container_codename: noble
          - container_id: ubuntu
            container_codename: bullseye
          - container_id: ubuntu
            container_codename: bookworm
        include:
          - qbt_build_tool: "qmake"
            qbt_qt_version: "5"
          - qbt_build_tool: ""
            qbt_qt_version: "6"

    name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.qbt_libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.qbt_build_tool }}"
    env:
      build_dir: "qbt-build"
      artifact_name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.qbt_libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.qbt_build_tool }}-nox"
    container:
      image: ${{ matrix.container_id }}:${{ matrix.container_codename }}
      env:
        LANG: C.UTF-8
        LC_ALL: C.UTF-8
        DEBIAN_FRONTEND: noninteractive
        qbt_libtorrent_version: ${{ matrix.qbt_libtorrent_version }}
        qbt_qt_version: ${{ matrix.qbt_qt_version }}
        qbt_build_tool: ${{ matrix.qbt_build_tool }}
        qbt_cross_name: ""
        qbt_patches_url: ${{ github.repository }}
        qbt_skip_icu: ${{ inputs.icu == 'true' && 'no' || 'yes' }}
        qbt_boost_tag: ""
        qbt_libtorrent_tag: ""
        qbt_qt_tag: ""
        qbt_qbittorrent_tag: ""
        qbt_libtorrent_master_jamfile: ""
        qbt_workflow_files: ${{ inputs.workflow-files == 'true' && 'yes' || 'no' }}
        qbt_workflow_artifacts: ${{ inputs.artifacts == 'true' && 'yes' || 'no' }}
        qbt_cache_dir: ""
        qbt_optimise_strip: ""
        qbt_build_debug: ${{ inputs.debug == 'true' && 'yes' || 'no' }}
        qbt_revision_url: ${{ github.repository }}
        qbt_standard: ""
        qbt_static_ish: ""
    steps:
      - uses: actions/checkout@v4

      - name: Host - update action - ${{ github.event.inputs.distinct_id }}
        if: github.event.inputs.artifacts == 'true'
        uses: ./.github/actions/host-update
        with:
          distinct_id: ${{ github.event.inputs.distinct_id }}

      - run: bash qbittorrent-nox-static.sh -bs-a
      - run: bash qbittorrent-nox-static.sh glibc
      - run: bash qbittorrent-nox-static.sh zlib
      - run: bash qbittorrent-nox-static.sh iconv
      - run: bash qbittorrent-nox-static.sh icu
      - run: bash qbittorrent-nox-static.sh openssl
      - run: bash qbittorrent-nox-static.sh boost
      - run: bash qbittorrent-nox-static.sh libtorrent
      - run: bash qbittorrent-nox-static.sh double_conversion
        if: matrix.qbt_build_tool == ''
      - run: bash qbittorrent-nox-static.sh qtbase
      - run: bash qbittorrent-nox-static.sh qttools
      - run: bash qbittorrent-nox-static.sh qbittorrent

      - name: Host - qBittorrent v5 transition
        run: |
          if [[ -f ${{ env.qbt_build_dir }}/release_info/disable-qt5 ]]; then
            printf '%s\n' "disable_qt5=yes" >> $GITHUB_ENV
          fi

      - name: Docker - upx compression ${{ github.event.inputs.distinct_id }}
        if: github.event.inputs.upx == 'yes'
        uses: ./.github/actions/upx-compression
        with:
          distinct_id: ${{ github.event.inputs.distinct_id }}

      - name: Archive code coverage results
        if: env.disable_qt5 != 'yes' # When qBittorrent v5 is released, remove this
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ${{ env.build_dir }}/completed/qbittorrent-nox
