name: ci - debian
on:
  workflow_call:
    inputs:
      container_id:
        type: string
      container_codename:
        type: string
      qbt_build_tool:
        type: string
      qbt_libtorrent_version:
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    name: "${{ inputs.container_id }}-${{ inputs.container_codename }}-${{ inputs.qbt_libtorrent_version }}-qt-${{ inputs.qbt_qt_version }}-${{ inputs.qbt_build_tool }}"
    env:
      build_dir: "qbt-build"
      artifact_name: "${{ inputs.container_id }}-${{ inputs.container_codename }}-${{ inputs.qbt_libtorrent_version }}-qt-${{ inputs.qbt_qt_version }}-${{ inputs.qbt_build_tool }}-nox"
    container:
      image: ${{ inputs.container_id }}:${{ inputs.container_codename }}
      env:
        LANG: en_GB.UTF-8
        DEBIAN_FRONTEND: noninteractive
        TZ: Europe/London
        qbt_libtorrent_version: ${{ inputs.qbt_libtorrent_version }}
        qbt_qt_version: ${{ inputs.qbt_qt_version }}
        qbt_build_tool: ${{ inputs.qbt_build_tool }}
        qbt_cross_name: ""
        qbt_patches_url: ${{ github.repository }}
        qbt_skip_icu: no
        qbt_boost_tag: ""
        qbt_libtorrent_tag: ""
        qbt_qt_tag: ""
        qbt_qbittorrent_tag: ""
        qbt_libtorrent_master_jamfile: no
        qbt_workflow_files: yes
        qbt_workflow_artifacts: no
        qbt_cache_dir: ""
        qbt_optimise_strip: yes
        qbt_build_debug: no
        qbt_revision_url: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4

      - name: Host - update
        run: apt-get update

      - name: Host - upgrade
        run: apt-get -y upgrade

      - run: bash qbittorrent-nox-static.sh -bs-a
      - run: bash qbittorrent-nox-static.sh glibc
      - run: bash qbittorrent-nox-static.sh zlib
      - run: bash qbittorrent-nox-static.sh iconv
      - run: bash qbittorrent-nox-static.sh icu
      - run: bash qbittorrent-nox-static.sh openssl
      - run: bash qbittorrent-nox-static.sh boost
      - run: bash qbittorrent-nox-static.sh libtorrent
      - run: bash qbittorrent-nox-static.sh double_conversion
        if: matrix.qbt_build_tool == 'cmake'
      - run: bash qbittorrent-nox-static.sh qtbase
      - run: bash qbittorrent-nox-static.sh qttools
      - run: bash qbittorrent-nox-static.sh qbittorrent

      - name: Host - qBittorrent v5 transition
        run: |
          # When qBittorrent v5 is released, remove this
          if [[ -f ${{ env.qbt_build_dir }}/release_info/disable-qt5 ]]; then
            printf '%s\n' "disable_qt5=yes" >> $GITHUB_ENV
          fi

      - name: Archive code coverage results
        if: env.disable_qt5 != 'yes' # When qBittorrent v5 is released, remove this
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ${{ env.build_dir }}/completed/qbittorrent-nox

  rerun-on-failure:
    if: failure() && inputs.skip_rerun == '0'
    name: rerun-on-failure
    needs: build
    permissions:
      actions: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v4
      - name: Trigger rerun workflow on job failures
        run: |
          inputs_retries="${{ inputs.retries }}"
          gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${inputs_retries:-1}
