name: ci - main reusable caller

on:
  workflow_dispatch:
    inputs:
      debian:
        description: "Debian CI"
        required: true
        default: false
        type: boolean
      alpine:
        description: "Alpine builds"
        required: true
        default: true
        type: boolean
      artifacts:
        description: "Alpine: wf artifacts"
        required: true
        default: false
        type: boolean
      workflows:
        description: "Alpine: wf files"
        required: true
        default: true
        type: boolean
      debug:
        description: "debug builds"
        required: true
        default: false
        type: boolean
      custom:
        description: "custom build commands"
        required: false
        type: string
      upx:
        description: "upx compress builds"
        required: true
        default: false
        type: boolean
      release:
        description: "release assets?"
        required: true
        default: true
        type: boolean
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: false
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "1"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

permissions:
  actions: write
  id-token: write
  contents: write
  attestations: write

env:
  GH_TOKEN: "${{ github.TOKEN }}"

jobs:
  skip_duplicate_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "always"
          cancel_others: "false"
          skip_after_successful_duplicate: false
          do_not_skip: ""

  debian:
    needs: [skip_duplicate_job]
    if: github.event.inputs.debian == 'true' && needs.skip_duplicate_job.outputs.should_skip != 'true'
    strategy:
      fail-fast: false
      matrix:
        container_id: [debian, ubuntu]
        container_codename: [bookworm, jammy, noble]
        qbt_build_tool: [""]
        qbt_libtorrent_version: ["1.2", "2.0"]
        exclude:
          - container_id: debian
            container_codename: focal
          - container_id: debian
            container_codename: jammy
          - container_id: debian
            container_codename: noble
          - container_id: ubuntu
            container_codename: bullseye
          - container_id: ubuntu
            container_codename: bookworm
    uses: ./.github/workflows/ci-debian.yml
    secrets: inherit
    with:
      container_id: ${{ matrix.container_id }}
      container_codename: ${{ matrix.container_codename }}
      qbt_build_tool: ${{ matrix.qbt_build_tool }}
      qbt_libtorrent_version: ${{ matrix.qbt_libtorrent_version }}

  artifacts:
    needs: [skip_duplicate_job]
    if: github.event.inputs.artifacts == 'true' && needs.skip_duplicate_job.outputs.should_skip != 'true'
    uses: ./.github/workflows/ci-artifacts.yml

  alpine:
    needs: [skip_duplicate_job, artifacts]
    if: |
      github.event.inputs.alpine == 'true' &&
      needs.skip_duplicate_job.outputs.should_skip != 'true' &&
      (always() || needs.artifacts.result == 'success' || needs.artifacts.result == 'skipped')
    strategy:
      fail-fast: false
      matrix:
        os_id: [alpine]
        os_version_id: [edge]
        qbt_cross_name: ["armhf", "armv7", "aarch64", "x86_64", "x86"]
        qbt_libtorrent_version: ["1.2", "2.0"]
        qbt_build_tool: [""]
        include:
          - qbt_build_tool: ""
            qbt_qt_version_name: ""
            qbt_qt_version: "6"
    uses: ./.github/workflows/ci-alpine.yml
    secrets: inherit
    with:
      artifacts: ${{ inputs.artifacts == 'true' && 'yes' || 'no' }}
      workflows: ${{ inputs.workflows == 'true' && 'yes' || 'no' }}
      debug: ${{ inputs.debug == 'true' && 'yes' || 'no' }}
      upx: ${{ inputs.upx == 'true' && 'yes' || 'no' }}
      custom: ${{ inputs.custom }}
      os_id: ${{ matrix.os_id }}
      os_version_id: ${{ matrix.os_version_id }}
      qbt_qt_version_name: ${{ matrix.qbt_qt_version_name }}
      qbt_libtorrent_version: ${{ matrix.qbt_libtorrent_version }}
      qbt_qt_version: ${{ matrix.qbt_qt_version }}
      qbt_build_tool: ${{ matrix.qbt_build_tool }}
      qbt_cross_name: ${{ matrix.qbt_cross_name }}
      qbt_patches_url: ${{ github.repository }}
      qbt_skip_icu: ${{ matrix.qbt_skip_icu }}
      qbt_boost_tag: ${{ matrix.qbt_boost_tag }}
      qbt_libtorrent_tag: ${{ matrix.qbt_libtorrent_tag }}
      qbt_qt_tag: ${{ matrix.qbt_qt_tag }}
      qbt_qbittorrent_tag: ${{ matrix.qbt_qbittorrent_tag }}
      qbt_libtorrent_master_jamfile: ${{ matrix.qbt_libtorrent_master_jamfile }}
      qbt_workflow_files: ${{ matrix.qbt_workflow_files }}
      qbt_workflow_artifacts: ${{ matrix.qbt_workflow_artifacts }}
      qbt_cache_dir: ${{ matrix.qbt_cache_dir }}
      qbt_optimise_strip: ${{ matrix.qbt_optimise_strip }}
      qbt_build_debug: ${{ matrix.qbt_build_debug }}
      qbt_revision_url: ${{ github.repository }}
      qbt_standard: ${{ matrix.qbt_standard }}
      qbt_static_ish: ${{ matrix.qbt_static_ish }}

  release:
    needs: [alpine]
    if: github.event.inputs.release && needs.skip_duplicate_job.outputs.should_skip != 'true'
    strategy:
      fail-fast: false
      matrix:
        qbt_libtorrent_version: ["1.2", "2.0"]
        include:
          - qbt_libtorrent_version: "1.2"
            preview_release: true
          - qbt_libtorrent_version: "2.0"
            preview_release: false
    uses: ./.github/workflows/ci-release.yml
    secrets: inherit

  rerun_on_failure:
    needs: [skip_duplicate_job, debian, alpine, release]
    if: failure() && needs.skip_duplicate_job.outputs.should_skip != 'true'
    name: rerun-on-failure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trigger rerun workflow on job failures
        run: |
          inputs_retries="${{ needs.scheduled_defaults.outputs.retries }}"
          gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${inputs_retries:-1}
